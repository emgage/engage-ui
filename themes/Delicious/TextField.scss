$backdrop-horizontal-spacing: spacing(tighter) * 1.5;
$spinner-size: 2rem;

.textField {
  @include text-style-input;
  z-index: auto;
  padding: 0 $backdrop-horizontal-spacing;
  color: theme-color(m-grey, 900);
  margin-top: 0px;

  &.focused {
    > .backdrop {
      border-color: theme-color(m-blue, 300);
      box-shadow: 0 0 0 1px theme-color(m-blue, 300);
    }
  }
}

.hasValue {

  .prefix {
    padding-top: (control-vertical-padding() * 2) - 0.3rem; // total padding - padding-bottom
    padding-bottom: 0.3rem;
  }

  .suffix {
    padding-top: (control-vertical-padding() * 2) - 0.3rem; // total padding - padding-bottom
    padding-bottom: 0.3rem;
  }

  .input{
    color: theme-color(m-grey, 900);
    padding-top: (control-vertical-padding() * 2) - 0.3rem; // total padding - padding-bottom
    padding-bottom: 0.3rem;
  }
  &.labelHidden {
    
    > .prefix {
      padding-top: control-vertical-padding();
      padding-bottom: control-vertical-padding();
    }
  
    > .suffix {
      padding-top: control-vertical-padding();
      padding-bottom: control-vertical-padding();
    }

    > .input {
      padding-top: control-vertical-padding();
      padding-bottom: control-vertical-padding();
    }
    
    &.multiline > .input {
      margin-top: control-vertical-padding();
      padding-top: 0;
    }
  }
}

.error {

  .backdrop {
    background-color: #fff;
    border-color: #E53935;
    // box-shadow:
    // inset shadow(transparent),
    // 0 0 0 1px theme-color(m-red, 600);
  }
  &.focused {
    > .backdrop {
      border-color: #E53935;
      box-shadow: 0 0 0 1px #E53935;
    }
  }
}

.disabled > .backdrop {
  background-color: #F5F5F5;
  border-color: #F5F5F5;
}

.input {
  @include text-style-input;
  height: auto;
  min-height: control-height();
  padding: control-vertical-padding() 0;
  transition: 0.3s all ease;

  &:disabled {
    color: #424242;
  }

  &:focus {
    outline: none;
    box-shadow: none;
    padding-top: (control-vertical-padding() * 2) - 0.3rem;
    padding-bottom: 0.3rem;

    ~ .backdrop {
      border-color: theme-color(m-blue, 300);
      box-shadow: 0 0 0 1px theme-color(m-blue, 300);
    }
  }

  &::placeholder {
    color: theme-color(m-grey, 500);
  }
}

.spinnerWrapper {
  transition: 0.3s all ease;
}

.backdrop {
  border: border(dark);
  border-color: theme-color(m-grey, 400);
  border-radius: border-radius();
  box-shadow: none;
  will-change: auto;
  transition: none;
}

.dummyInput {
  @include text-style-input;
  padding: control-vertical-padding() $backdrop-horizontal-spacing;
  color:color(black);
  background-color:color(white);
}


// Character counter

.counterText {
  @include text-style-body-small;
  color: theme-color(m-grey, 700);
  margin-top: 0.3rem;

  .invalid {
    color: theme-color(m-red, 800);
  }
}

.disabled + .counterText {
  color: theme-color(m-grey, 500);
}


// Lable Styling
.label {
  display: table;
  table-layout: fixed;
  width: calc(100% - 20px);
}
.labelStyle {
  @include text-style-body-large;
  color: color(ink, lighter);
  transition: 0.3s all ease;
  display: table-cell;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.labelStyleSlim {
  line-height: 1rem;
  font-size: 1.4rem;
}

.labelHasValue {
  @include text-style-body-small;
  color: theme-color(m-grey, 700);
}

.labelDisabled {
  color: theme-color(m-grey, 700);
}

.labelHidden {

  > .input {
    transition: none;

    &:focus {
      padding-top: control-vertical-padding();
      padding-bottom: control-vertical-padding();
    }
  }
}
