@import 'foundation/colors';
@import 'foundation/duration';
@import 'foundation/easing';
@import 'foundation/shadows';
@import 'foundation/spacing';
@import 'foundation/borders';
@import 'foundation/border-radius';
@import 'foundation/utilities';
@import 'shared/accessibility';

$arrow-size: rem(14px);
$visible-portion-of-arrow: rem(5px);
$content-max-height: rem(295px);
$content-max-width: rem(400px);

.Popover {
  max-width: calc(100vw - #{2 * spacing()});
  margin: $visible-portion-of-arrow spacing() spacing();
  opacity: 1;
  box-shadow: shadow(deep);
  border-radius: border-radius(large);
  will-change: opacity, left, top;
  transition: opacity duration() easing(in);
}

.measuring:not(.leaving),
.leaving {
  opacity: 0;
}

.measuring {
  .Content {
    display: block;
  }
}

.leaving {
  transition-timing-function: easing(out);
}

.positionedAbove {
  margin: spacing() spacing() $visible-portion-of-arrow;

  .Tip {
    top: inherit;
    bottom: 0;
    border-top-left-radius: 0;
    border-bottom-right-radius: border-radius();
  }
}

.Wrapper {
  position: relative;
  overflow: hidden;
  background-color: color(white);
  border-radius: border-radius(large);
}

.Content {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: border-radius(large);
  max-width: $content-max-width;
  max-height: $content-max-height;

  &:focus {
    outline: none;
  }
}

.Tip {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%) rotate(45deg);
  height: $arrow-size;
  width: $arrow-size;
  background: color(white);
  border-top-left-radius: border-radius();
  box-shadow: shadow(deep);
}

.Pane {
  flex: 1 1 0%;
  max-width: 100%;

  + .Pane {
    border-top: border();
  }
}

.Pane-fixed {
  overflow: visible;
  flex: 0 0 auto;
}

.Section {
  padding: spacing();

  + .Section {
    border-top: border();
  }
}

.FocusTracker {
  @include visually-hidden;
}
