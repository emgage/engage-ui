@import 'foundation/colors';
@import 'foundation/borders';
@import 'foundation/border-radius';
@import 'foundation/shadows';
@import 'shared/accessibility';
@import 'shared/controls';
@import 'shared/icons';

.checkbox {
  position: relative;
}

.error {
  // The basic checked styles have more specificity than this, so need to
  // basically duplicate that selector here, too.
  // stylelint-disable-next-line selector-max-specificity
  .input:checked + .backdrop,
  .backdrop {
    @include control-backdrop(error);
  }

  // We need to know if the input is focusing to change the border color.
  // stylelint-disable-next-line selector-max-specificity
  .input:focus + .backdrop,
  .input:active + .backdrop {
    @include control-backdrop(focused-error);
  }

  .icon {
    @include recolor-icon(color(red, dark));
  }
}

.input {
  @include visually-hidden;

  &:focus,
  &:active,
  &:checked {
    + .backdrop {
      background: color(indigo);
    }
  }

  &:checked {
    ~ .icon {
      transform: translate(-50%, -50%) scale(1);
    }
  }

  &:focus,
  &:active {
    + .backdrop {
      @include control-backdrop(focused);
    }
  }

  &:disabled {
    + .backdrop {
      @include control-backdrop(disabled);
    }

    ~ .Icon {
      @include recolor-icon(color(ink, lightest));
    }
  }
}

.backdrop {
  @include control-backdrop;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.icon {
  @include recolor-icon(color(indigo));
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  transform-origin: 50% 50%;
  transition: control-icon-transition();
}
