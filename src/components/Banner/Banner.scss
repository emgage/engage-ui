$accent-height: 1px;
$dismiss-size: 1.6rem;
$ribbon-flex-basis: 3.2rem;
$secondary-action-vertical-padding: 0.5 * (control-height() - line-height(body));
$secondary-action-horizontal-padding: 1.5 * spacing(tightest);

@mixin banner-colors($highlight, $background) {
  background-color: $background;
  border: 1px solid $highlight;

  &:focus {
    box-shadow:
      inset $accent-height 0 0 0 $highlight,
      inset 0 0 0 $accent-height $highlight,
      shadow();
  }
}
@mixin icon-color($fill) {
  fill: $fill;
}
.banner {
  @include banner-colors(color(ink, lighter), color(sky, light));
  position: relative;
  display: flex;
  padding: spacing();
  border-radius: border-radius(larger);
  transition: box-shadow duration() easing();
  @include icon-color(color(ink));
  + .Banner {
    margin-top: spacing(loose);
  }

  &:focus {
    outline: none;
  }
}

.hasDismiss {
  padding-right: $dismiss-size + (2 * spacing());
}

.statusSuccess {
  @include banner-colors(color(green), color(green, lighter));
  @include icon-color(color(green));
}

.statusInfo {
  @include banner-colors(color(teal), color(teal, lighter));
  @include icon-color(color(teal));
}

.statusWarning {
  @include banner-colors(color(yellow), color(yellow, lighter));
  @include icon-color(color(yellow));
}

.statusCritical {
  @include banner-colors(color(red), color(red, lighter));
  @include icon-color(color(red));
}

.ribbon {
  flex: 0 0 $ribbon-flex-basis;
  margin-right: spacing(tightest);
}

.heading {
  margin-top: spacing(tightest);
}

.actions {
  margin-top: spacing();
}

.content {
  margin: spacing(tightest) 0;
}

// We need pretty high specificity to do the descendant selectors
// onto the text, which needs to be the relative positioned wrapper
// so that the borders/ backgrounds do not extend outside of it.
// stylelint-disable selector-max-specificity

.secondaryAction {
  @include unstyled-button;
  @include unstyled-link;
  margin: (-1 * $secondary-action-vertical-padding) (-0.5 * $secondary-action-horizontal-padding);
  padding: $secondary-action-vertical-padding $secondary-action-horizontal-padding;
  color: color(ink);

  &:hover > .text::after {
    opacity: 0.75;
  }

  &:active > .text::after {
    opacity: 0;
  }

  &:focus > .text {
    &::before {
      opacity: 1;
    }

    &::after {
      opacity: 0;
    }
  }
}

// stylelint-enable selector-max-specificity

.text {
  position: relative;

  &::after,
  &::before {
    content: '';
    position: absolute;
  }

  &::before {
    @include plain-button-backdrop;
    opacity: 0;
  }

  &::after {
    bottom: 0;
    left: 0;
    right: 0;
    display: block;
    border: 1px solid currentColor;
    opacity: 0.25;
    will-change: opacity;
    transition: opacity duration() easing();
  }
}

.dismiss {
  position: absolute;
  top: $accent-height;
  right: 0;
  padding: (spacing(tightest) * 1.5);
}

.bannerStyle {
  justify-content: flex-start;
  width: 100%
}

.bannerHading {
  white-space: normal;
}

.bannerContent {
  width: 100%;
  padding: 0px 0.5rem;
}
.bannerBox {
  display: flex;
}
