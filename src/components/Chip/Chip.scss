$height: rem(32px);
$horizontal-padding: spacing(tighter) * 1.5;

$min-height: control-height();
$vertical-padding: ($min-height - line-height(body) - rem(2px)) / 2;

.Chip {
    @include text-style-input;
    display: flex;
    color: rgba(0, 0, 0, 0.54);
    line-height: $height;
    min-height: $height;
    min-width: $height;
    margin: 0;
    padding: 0 $horizontal-padding;
    border: none;
    border-radius: $height / 2;
    background-color: rgba(153, 153, 153, 0.2);
    overflow: hidden;
    text-overflow: ellipsis;
    // vertical-align: top;
}

:focus {
    /* Not removing directly, its possible that we might need this in future */
    // box-shadow: 0 3px 3px -2px rgba(0,0,0,.2), 0 3px 4px 0 rgba(0,0,0,.14), 0 1px 8px 0 rgba(0,0,0,.12);
    outline: 0;
}

.hidden {
  overflow: hidden;
  width: .01px;
  position: absolute;
}

.Image {
    float: left;
    margin: 0 ($height / 4) 0 (-1 * $horizontal-padding);
    height: $height;
    width: $height;
    border-radius: 50%;
}

.Remove {
    cursor: pointer;
    float: right;
    text-align: center;
    margin: ($horizontal-padding / 2) (-1 * $horizontal-padding / 2) ($horizontal-padding / 2) ($horizontal-padding / 2);
    display: block;
    &:focus {
        fill:#f5f5f5
    }
}

.transparent{
    background-color: transparent;
}

.chipContent {
    align-self: center;
    display: flex;
    span {
        margin-left: 15px;
        align-self: center;
    }
}